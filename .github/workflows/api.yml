name: API
"on":
  push:
    branches:
      - main
  pull_request:

jobs:
  # api_staging:
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: staging-api
  #     url: https://staging.foodieyak.com/api

  #   defaults:
  #     run:
  #       working-directory: "./api"

  #   env:
  #     FIREBASE_GOOGLE_SERVICE_ACCOUNT_CERTIFICATE: ${{ secrets.FIREBASE_GOOGLE_SERVICE_ACCOUNT_CERTIFICATE }}

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version-file: "./package.json"
  #     - uses: pnpm/action-setup@v2
  #       name: Install pnpm
  #       with:
  #         version: 8
  #         run_install: false

  #     - name: Get pnpm store directory
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       run: pnpm install
  #     - run: s/deploy-stage
  stage_deploy:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: "foodieyak-staging"

    environment:
      name: staging-api
      url: https://foodieyak.com/api

    defaults:
      run:
        working-directory: "./api"

    steps:
      - uses: actions/checkout@v3
      - uses: "google-github-actions/auth@v2"
        id: auth
        with:
          project_id: "foodieyak-staging"
          credentials_json: "${{ secrets.GCLOUD_SERVICE_ACCOUNT_JSON }}"
      - uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 363.0.0"
      - uses: docker/setup-buildx-action@v2
      - run: gcloud auth list

      - run: gcloud auth configure-docker us-central1-docker.pkg.dev
      - run: gcloud artifacts repositories describe foodieyak-api --location us-central1
      - run: docker pull us-central1-docker.pkg.dev/foodieyak-staging/foodieyak-api/api:2b3f8ac10f6a68681da8d00058460516eee73d60
      # - run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev
      # - uses: docker/login-action@v3
      #   with:
      #     registry: us-central1-docker.pkg.dev
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}
      # - name: Build and push
      #   run: |
      #     git_sha=${{ github.event.pull_request.head.sha || github.sha }}
      #     docker build \
      #     --tag us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/foodieyak-api/api:$git_sha .
      #     docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/foodieyak-api/api:$git_sha
      #     echo "Pushed \`us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/foodieyak-api/api:$git_sha:$git_sha\`" >> $GITHUB_STEP_SUMMARY
      # - uses: actions/setup-python@v4
      #   with:
      #     python-version-file: "./api/.python-version"
      # - name: Install dependencies
      #   run: |
      #     pip install poetry==1.5.1
      #     poetry config virtualenvs.in-project true
      #     poetry install

      # - name: Install dependencies
      #   run: pnpm install
      # - run: s/deploy-prod
